@charset "utf-8";
/* INFO PJ 서브페이지 공통 CSS- sub.css*/

/* 공통 클래스 불러오기 */
/* 
    import로 파일 합치기
    외부 css파일에서 다른 외부css를 import방식으로 불러올 때의 장점은?
    html파일에서 link요소로 호출할 경우 http request(웹요청)이 많아져서
    페이지 랜더링 속도가 더뎌진다~ 뭐 엄청 느려지진 않아도!
    따라서 이 방식을 쓰면 한 번에 여러 css를 불러올 수 있어서 속도에 유리함
*/
/* @import url(파일주소); */
@import url(common.css);

/* 메인 영역 박스 */
#cont {
    padding: 15px;
}
/* 2-1. 언론사 로고 */
.prlogo img {
    height: 32px; /* 이미지는 가로나 세로 중 하나만 변경하면 나머지는 자동으로 비율유지 */
}

/* 기사제목 */
.atit {
    /* 글자크기 */
    font-size: 30px;
    /* 글자두께 */
    font-weight: normal;
    /* 글자체: 순서대로 적용 */
    font-family: "굴림","궁서",sans-serif;
    /* 자간 */
    letter-spacing: -2px;
    /* 단어간격 */
    word-spacing: -0.5px;
    /* 줄바꿈방지 - 보통 박스는 자동으로 줄바꿈 처리하여 글자가 떨어지는데 nowrap으로 설정하면
    글자가 줄바꿈 안되고 밖으로 나감 */
    white-space: nowrap;
}
/* 제목 중 특정 글자만 변경 */
.atit span {
    color: rgb(64, 62, 202);
    /* 글자 그림자 text-shadow: x축 y축 블러 색; */
    text-shadow: 1px 1px 2px rgb(96, 106, 241);
}
/* 기사 이미지 박스 */
.afig {
    margin: 15px 0; /* 위아래 양옆 */
}
/* 기사이미지 */
.afig img {
    /* 가로크기: 부모박스 채우기 부모박스에 100% 채운다~ */
    width: 100%;
}
/* 기사이미지 설명 박스 */
.afig figcaption {
    text-align: center; /* 글자정렬:가운데정렬 */
    /* figcaption이 인라인이면 안 먹혀. 블록이어서 먹혔던거임..
    user agent 어쩌구에 block으로 애초에 되어있어 */
    /* 글자정렬은 블록 박스에서 적용해야 내부의 인라인 요소에 정렬이 변경됨
    인라인에서 적용하면 안되구! */
    margin-bottom: 35px; /* figcaption의 바깥 공간에 35픽셀 생긴겨 f12
    해보면 공간 빨갛게!! padding이면 안쪽으로 생겨서 연두색으로 나옴 */
}
/* 기사 이미지 설명 글 */
.afig small {
    font-family: gulim;
    color: rgb(16, 127, 192);
}
/* 기사내용박스 */
.arti p {
    font-family: "굴림", sans-serif;
    font-size: 17px;
    /* 줄간격: 숫자만 쓰면 배수 */
    line-height: 1.6;
    padding: 0 10px;
}
/* 기타 타이틀 h3 */
#cont h3 {
    font-family: 'Do Hyeon', sans-serif;
    /* 글자두께 */
    font-weight: lighter;
    /* 글자크기 */
    font-size: 25px;
    /* 패딩 왼쪽 */
    /* padding-left: 20px; */
}
/*공통박스*/
#cont article {
    border-top: 2px dashed #445ee9;
    margin-top: 40px;
    padding-top: 10px;
}
/* 블록 인용구 박스 */
.bquote blockquote {
    margin: 0;
    padding: 2px;
    text-align: justify;
    font-family: gulim;
    font-size: 14px;
    line-height: 23px;
}
.desc small {
    font-size: 14px;
    font-family: gulim;
}

/* 메인 컨텐츠 아래 a 요소 */
/* 주의 사항 - 글자색, 밑줄은 반드시 a 요소에서 할 것!! */
#cont a {
    color: #000;
    text-decoration: none;
    font-size: 14px;
    font-family: "돋움";
    line-height: 2.5;
    letter-spacing: -1px;
}
/* a 요소 마우스 오버시 :hover 가상클래스 마치 클래스를 준 것 같다 이런 의미*/
#cont a:hover {
    text-decoration: underline;
    color: rgb(44, 90, 18);
}
/* ul 블릿타입 변경 */
#cont ul {
    list-style: square;
}
#cont ol {
    list-style: upper-roman;
}
.secnews dt {
    margin-left: 14px;
    color: deeppink;
    font-weight: bold;
}
.secnews a {
    margin-left: -10px;
}
/* dt 순서별 글자색 변경  */
/*첫번째 dt  */
/* .secnews dt:first-of-type {
    color: fuchsia;
} */
/* dt 중 두번째 */
/* .secnews dt:nth-of-type(2) {
    color: turquoise;
} */
/* 마지막 dt */
/* .secnews dt:last-of-type {
    color: yellowgreen;
} */
/* 
    :first-of-type 같은 종류 중 첫번째 요소
    :nth-of-type(n) 같은 종류 중 n번째 요소 (n)에 순서 숫자 넣기
    :last-of-type 같은 종류 중 마지막 요소
*/

/* 붙여서 쓰는 것 : 종속선택자 */
article.work {
    text-align: center;
    background-color: lightcyan;
}
.work figcaption {
    padding-top: 12px;
    font-size: 14px;
}
.work cite {
    font-style: normal;

}